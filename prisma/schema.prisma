generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  firstname String
  lastname  String
  username  String    @unique
  bio       String?
  imageUrl  String?
  email     String    @unique
  password  String
  posts     Post[]
  comments  Comment[]
  likes     Like[]    // ðŸ†• user can like many posts
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  posts     Post[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Post {
  id          String    @id @default(uuid())
  title       String
  slug        String    @unique
  content     String
  imageUrl    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  views       Int       @default(0)    // ðŸ†• views counter
  userId      String
  user        User      @relation(fields: [userId], references: [id])

  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id])

  comments    Comment[]
  likes       Like[]    // ðŸ†• post can have many likes
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  postId String
  post   Post   @relation(fields: [postId], references: [id])
}

model Like {
  id        String   @id @default(uuid()) // ðŸ†• Like model
  userId    String
  postId    String
  createdAt DateTime @default(now())

  user      User   @relation(fields: [userId], references: [id])
  post      Post   @relation(fields: [postId], references: [id])

  @@unique([userId, postId]) // a user can like a post only once
}

